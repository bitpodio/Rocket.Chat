function module(e,r,s){let u,i,o,t;s.export({UserContext:()=>n,useUserId:()=>c,useUser:()=>b,useLoginWithPassword:()=>d,useUserPreference:()=>l,useUserSubscription:()=>a,useUserRoom:()=>p,useUserSubscriptions:()=>y,useUserSubscriptionByName:()=>q}),s.link("react",{createContext(e){u=e},useContext(e){i=e},useMemo(e){o=e}},0),s.link("use-subscription",{useSubscription(e){t=e}},1);const n=u({userId:null,user:null,loginWithPassword:async()=>void 0,queryPreference:()=>({getCurrentValue:()=>void 0,subscribe:()=>()=>void 0}),querySubscription:()=>({getCurrentValue:()=>void 0,subscribe:()=>()=>void 0}),queryRoom:()=>({getCurrentValue:()=>void 0,subscribe:()=>()=>void 0}),querySubscriptions:()=>({getCurrentValue:()=>[],subscribe:()=>()=>void 0})}),c=()=>i(n).userId,b=()=>i(n).user,d=()=>i(n).loginWithPassword,l=(e,r)=>{const{queryPreference:s}=i(n),u=o(()=>s(e,r),[s,e,r]);return t(u)},a=(e,r)=>{const{querySubscription:s}=i(n),u=o(()=>s({rid:e},r),[s,e,r]);return t(u)},p=(e,r)=>{const{queryRoom:s}=i(n),u=o(()=>s({_id:e},r),[s,e,r]);return t(u)},y=(e,r)=>{const{querySubscriptions:s}=i(n),u=o(()=>s(e,r),[s,e,r]);return t(u)},q=(e,r,s)=>{const{querySubscription:u}=i(n),c=o(()=>u({name:e},r,s),[u,e,r,s]);return t(c)}}

