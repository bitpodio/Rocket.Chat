function module(e,t,o){let i,r,l,n,s,a,c,u,m,h,d,k,R;o.link("react",{default(e){i=e},useCallback(e){r=e},useEffect(e){l=e}},0),o.link("meteor/meteor",{Meteor(e){n=e}},1),o.link("../../app/authorization/client",{hasPermission(e){s=e},hasAtLeastOnePermission(e){a=e},hasAllPermission(e){c=e},hasRole(e){u=e}},2),o.link("../contexts/AuthorizationContext",{AuthorizationContext(e){m=e},RoleStore(e){h=e}},3),o.link("./createReactiveSubscriptionFactory",{createReactiveSubscriptionFactory(e){d=e}},4),o.link("../hooks/useReactiveValue",{useReactiveValue(e){k=e}},5),o.link("../../app/models/client/models/Roles",{Roles(e){R=e}},6);const f={queryPermission:d((e,t)=>s(e,t)),queryAtLeastOnePermission:d((e,t)=>a(e,t)),queryAllPermissions:d((e,t)=>c(e,t)),queryRole:d(e=>u(n.userId(),e)),roleStore:new h},p=e=>{let{children:t}=e;const o=k(r(()=>R.find().fetch().reduce((e,t)=>(e[t._id]=t,e),{}),[]));return l(()=>{f.roleStore.roles=o,f.roleStore.emit("change",o)},[o]),i.createElement(m.Provider,{children:t,value:f})};o.exportDefault(p)}

