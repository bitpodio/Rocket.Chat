function module(n,o,e){let r,t,c;e.export({compileSort:()=>a}),e.link("./bson",{compareBSONValues(n){r=n}},0),e.link("./comparisons",{isEmptyArray(n){t=n}},1),e.link("./lookups",{createLookupFunction(n){c=n}},2);const s=n=>Array.isArray(n)?n.map(n=>"string"==typeof n?{lookup:c(n),ascending:!0}:{lookup:c(n[0]),ascending:"desc"!==n[1]}):Object.entries(n).map(n=>{let[o,e]=n;return{lookup:c(o),ascending:e>=0}}),i=(n,o)=>[].concat(...n.map(n=>Array.isArray(n)?t(n)?[void 0]:n:[n])).reduce((n,e)=>{const t=r(n,e);return o&&t>0||!o&&t<0?e:n}),a=n=>{const o=s(n);return 0===o.length?()=>0:(n,e)=>{for(let t=0;t<o.length;++t){const c=o[t],s=i(c.lookup(n),c.ascending),a=i(c.lookup(e),c.ascending),l=r(s,a);if(0!==l)return c.ascending?l:-l}return 0}}}

