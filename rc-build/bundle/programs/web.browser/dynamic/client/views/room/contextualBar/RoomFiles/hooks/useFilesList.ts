function module(e,t,s){let i,l,o,n,r,a,u,c,d,p,m,f;s.link("@babel/runtime/helpers/objectSpread2",{default(e){i=e}},0),s.export({useFilesList:()=>g}),s.link("react",{useCallback(e){l=e},useEffect(e){o=e},useMemo(e){n=e},useState(e){r=e}},0),s.link("../../../../../lib/lists/FilesList",{FilesList(e){a=e}},1),s.link("../../../../../contexts/ServerContext",{useEndpoint(e){u=e}},2),s.link("../../../../../contexts/UserContext",{useUserRoom(e){c=e},useUserId(e){d=e}},3),s.link("../../../../../hooks/lists/useScrollableMessageList",{useScrollableMessageList(e){p=e}},4),s.link("../../../../../hooks/lists/useStreamUpdatesForMessageList",{useStreamUpdatesForMessageList(e){m=e}},5),s.link("../../../../../../app/ui-utils/client/config",{getConfig(e){f=e}},6);const g=e=>{const[t]=r(()=>new a(e)),s=c(e.rid),g=d();o(()=>{t.options!==e&&t.updateFilters(e)},[t,e]);const k={c:"channels.files",l:"channels.files",d:"im.files",p:"groups.files"},S=s&&k[s.t],L=u("GET",S),x=l(async(t,s)=>{const{files:l,total:o}=await L({roomId:e.rid,count:s-t,sort:JSON.stringify({uploadedAt:-1}),query:JSON.stringify(i({name:{$regex:e.text||"",$options:"i"}},"all"!==e.type&&{typeGroup:e.type}))});return{items:l,itemCount:o}},[L,e.rid,e.type,e.text]),{loadMoreItems:y,initialItemCount:b}=p(t,x,n(()=>{const e=f("discussionListSize");return e?parseInt(e,10):void 0},[]));return m(t,g,e.rid),{filesList:t,loadMoreItems:y,initialItemCount:b}}}

