function module(e,t,n){let r,s,i,a;n.export({createKatexMessageRendering:()=>d}),n.link("meteor/random",{Random(e){r=e}},0),n.link("katex",{default(e){s=e}},1),n.link("../../../lib/escapeHTML",{escapeHTML(e){i=e}},2),n.link("../../../lib/unescapeHTML",{unescapeHTML(e){a=e}},3),n.link("katex/dist/katex.min.css"),n.link("./style.css");class o{length(){return this.end-this.start}extract(e){return e.substr(this.start,this.length())}}class l{constructor(e,t){let{dollarSyntax:n,parenthesisSyntax:s}=t;this.renderLatex=(e,t)=>{try{return this.katex.renderToString(e,{displayMode:t,macros:{"\\href":"\\@secondoftwo"}})}catch({message:n}){return'<div class="katex-error katex-'.concat(t?"block":"inline",'-error">')+"".concat(i(n),"</div>")}},this.renderMessage=e=>{var t;return"string"==typeof e?this.render(e,this.renderLatex):null!==(t=e.html)&&void 0!==t&&t.trim()?(e.tokens||(e.tokens=[]),e.html=this.render(e.html,(t,n)=>{const s="=!=".concat(r.id(),"=!=");return e.tokens.push({token:s,text:this.renderLatex(t,n)}),s}),e):e},this.katex=e,this.delimitersMap=[{opener:"\\[",closer:"\\]",displayMode:!0,enabled:()=>s},{opener:"\\(",closer:"\\)",displayMode:!1,enabled:()=>s},{opener:"$$",closer:"$$",displayMode:!0,enabled:()=>n},{opener:"$",closer:"$",displayMode:!1,enabled:()=>n}]}findOpeningDelimiter(e,t){const n=this.delimitersMap.filter(e=>e.enabled()).map(n=>({options:n,pos:e.indexOf(n.opener,t)})),r=n.filter(e=>{let{pos:t}=e;return t>=0}).map(e=>{let{pos:t}=e;return t});if(0===r.length)return null;const s=Math.min(...r),i=n.findIndex(e=>{let{pos:t}=e;return t===s}),a=n[i];return a}getLatexBoundaries(e,t){let{options:{closer:n},pos:r}=t;const s=e.substr(r+n.length).indexOf(n);if(s<0)return null;const i=new o,a=new o;return i.start=r+n.length,i.end=i.start+s,a.start=r,a.end=i.end+n.length,{outer:a,inner:i}}findLatex(e){let t=0,n;for(;null!=(n=this.findOpeningDelimiter(e,t++));){const t=this.getLatexBoundaries(e,n);if(t&&t.inner.extract(e).trim().length)return t.options=n.options,t}return null}extractLatex(e,t){const n=e.substr(0,t.outer.start),r=e.substr(t.outer.end);let s=t.inner.extract(e);return{before:n,latex:s=a(s),after:r}}render(e,t){let n="";for(;null!=this.findLatex(e);){const r=this.findLatex(e),s=this.extractLatex(e,r),i=t(s.latex,r.options.displayMode);n+=s.before+i,e=s.after}return n+=e}}const d=e=>{const t=new l(s,e);return e=>t.renderMessage(e)}}

